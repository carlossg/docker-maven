name: Windows Docker Image CI

on: [push, pull_request]

jobs:
  build:

    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v1
    - name: Build Images
      run: |
        Install-Module -Name Pester -Force -RequiredVersion 4.9.0
        $tags = @('3.6.2', '3.6', '3')
        Get-ChildItem -Path windows\* -File -Include "Dockerfile.windows-*" | ForEach-Object {
          Push-Location
          $dockerfile = $_

          $windowsType = 'windowsservercore'
          $windowsDockerTag = 'ltsc2019'

          if($dockerfile.Name.Contains('nanoserver')) {
            $windowsType = 'windowsnanoserver'
            $windowsDockerTag = $('{0}' -f (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion' -Name ReleaseID | Select-Object ReleaseID).ReleaseID)
          }

          if($dockerfile.Name.Contains('jdk-')) {
            $windowsDockerTag = $('{0}' -f (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion' -Name ReleaseID | Select-Object ReleaseID).ReleaseID)
          }

          # run tests
          Push-Location
          $env:TAG=$dockerfile.Name.Replace('Dockerfile.windows-', '')
          $env:WINDOWS_DOCKER_TAG=$windowsDockerTag
          Invoke-Pester -Path tests
          Remove-Item env:\TAG
          Remove-Item env:\WINDOWS_DOCKER_TAG
          Pop-Location

          $tags | ForEach-Object {
            Push-Location windows
            $tag = ('slideomix/maven:{0}-{1}-{2}-{3}' -f $_,$dockerfile.Name.Replace('Dockerfile.windows-', ''),$windowsType,$windowsDockerTag)
            docker build -f $dockerfile --tag $tag --build-arg WINDOWS_DOCKER_TAG=${windowsDockerTag} .

            if('${{ github.event_name }}' -eq 'push') {
              '${{ secrets.DOCKER_PASSWORD }}' | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
              & docker push $tag
            }
            Pop-Location
          }
          Pop-Location
        }
      shell: pwsh
