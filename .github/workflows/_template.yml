on:
  workflow_call:
    inputs:
      directory:
        required: true
        type: string

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  REGISTRY2: docker.io
  # github.repository as <account>/<repo>
  DOCKERHUB_USERNAME: csanchez
  IMAGE_NAME: carlossg/maven # ${{ github.repository }}
  IMAGE_NAME2: csanchez/maven

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup BATS
        uses: bats-core/bats-action@73f0f7d34ec09278ce76030c105fc6a8ddb1d726
      - name: Update submodules
        run: git submodule update --init

      # Signing based on https://github.com/actions/starter-workflows/blob/main/ci/docker-publish.yml

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.1.0
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3.4.0

      - name: Test
        run: bats tests
        env:
          TAG: ${{ inputs.directory }}

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          # GITHUB_TOKEN configured in maven package "Manage Actions access"
          # https://github.com/users/carlossg/packages/container/maven/settings
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log into registry DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY2 }}
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          tags: |
            type=schedule,suffix=-${{ inputs.directory }}
            type=ref,event=tag,suffix=-${{ inputs.directory }}
            type=ref,event=pr,prefix=pr-,suffix=-${{ inputs.directory }}
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            ${{ env.IMAGE_NAME2 }}

      # get all the docker tags for this image
      - name: Retrieve tags
        run: |
          TAGS="$(./tags-for-dir.sh ${GITHUB_WORKFLOW})"
          echo "tags=$TAGS" >> $GITHUB_OUTPUT
        id: retrieve-tags

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        if: github.event_name != 'pull_request' # TODO
        with:
          context: ${{ inputs.directory }}
          push: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ steps.retrieve-tags.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Sign the resulting Docker image digest except on PRs and private repos
      # The keyless signing process records signatures on the Rekor public
      # transparency log, so signing is disabled for private repos by default
      # to avoid leaking private data.  If you wish to sign things anyways,
      # then this check can be removed and --force can be added to the cosign
      # command below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker images
        if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' && !github.event.repository.private }}
        env:
          REGISTRY1: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
          REGISTRY2: ${{ env.REGISTRY2 }}/${{ env.IMAGE_NAME2 }}@${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance, and records it to the
        # sigstore community Rekor transparency log.
        run: cosign sign --yes ${REGISTRY1} ${REGISTRY2}
